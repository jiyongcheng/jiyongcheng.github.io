<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>format on What, Why, How</title><link>https://jiyongcheng.dev/tags/format/</link><description>Recent content in format on What, Why, How</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 14 Sep 2021 18:26:55 +0000</lastBuildDate><atom:link href="https://jiyongcheng.dev/tags/format/index.xml" rel="self" type="application/rss+xml"/><item><title>JSON</title><link>https://jiyongcheng.dev/post/json/</link><pubDate>Tue, 14 Sep 2021 18:26:55 +0000</pubDate><guid>https://jiyongcheng.dev/post/json/</guid><description>Getting started Introduction JSON is a lightweight text-based open standard designed for human-readable data interchange.
JSON stands for JavaScript Object Notation JSON is easy to read and write. JSON is language agnostic data-interchange format JSON filename extension is .json JSON Internet Media type is application/json {.style-round} Examples 1 2 3 4 5 6 7 8 9 10 11 12 { &amp;#34;name&amp;#34;: &amp;#34;Jason&amp;#34;, &amp;#34;age&amp;#34;: 39, &amp;#34;height&amp;#34;: 1.92, &amp;#34;gender&amp;#34;: &amp;#34;M&amp;#34;, &amp;#34;salary&amp;#34;: 70000, &amp;#34;married&amp;#34;: true, &amp;#34;children&amp;#34;: [ {&amp;#34;name&amp;#34;: &amp;#34;Tom&amp;#34;, &amp;#34;age&amp;#34;: 9, &amp;#34;gender&amp;#34;:&amp;#34;M&amp;#34;}, {&amp;#34;name&amp;#34;: &amp;#34;Ava&amp;#34;, &amp;#34;age&amp;#34;: 7, &amp;#34;gender&amp;#34;:&amp;#34;F&amp;#34;} ] } Types Type Description Number Double precision floating-point String Series of characters Boolean true or false Array Ordered sequence of values Value String, Number, Boolean, null etc Object Unordered collection of key/value pairs null Null or Empty String \&amp;quot; Double quote \\ Backslash \/ Forward slash \b Backspace \f Form feed \n Newline \r Carriage return \t Tab \u Trailed by four hex digits Examples 1 2 3 4 5 { &amp;#34;url&amp;#34;: &amp;#34;https://quickref.</description></item><item><title>TOML</title><link>https://jiyongcheng.dev/post/toml/</link><pubDate>Tue, 29 Dec 2020 20:36:35 +0000</pubDate><guid>https://jiyongcheng.dev/post/toml/</guid><description>Getting started Introduction TOML is a minimal configuration file format that&amp;rsquo;s easy to read due to obvious semantics.
Document (toml.io) Learn X in Y minutes (learnxinyminutes.com) Examples 1 2 3 4 5 6 bool = true date = 2006-05-27T07:32:00Z string = &amp;#34;hello&amp;#34; number = 42 float = 3.14 scientificNotation = 1e+12 Comments 1 2 3 4 5 6 # A single line comment example# block level comment example# comment line 1# comment line 2# comment line 3 Integer 1 2 3 4 int1 = +42 int2 = 0 int3 = -21 integerRange = 64 Float 1 2 3 float2 = 3.</description></item><item><title>YAML</title><link>https://jiyongcheng.dev/post/yaml/</link><pubDate>Tue, 29 Dec 2020 18:26:55 +0000</pubDate><guid>https://jiyongcheng.dev/post/yaml/</guid><description>Getting started Introduction YAML is a data serialisation language designed to be directly writable and readable by humans
YAML does not allow the use of tabs Must be space between the element parts YAML is CASE sensitive End your YAML file with the .yaml or .yml extension YAML is a superset of JSON Ansible playbooks are YAML files {.style-round} Scalar types 1 2 3 4 5 6 7 8 9 10 n1:1# integer n2:1.</description></item><item><title>Markdown</title><link>https://jiyongcheng.dev/post/markdown/</link><pubDate>Mon, 14 Dec 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/markdown/</guid><description>Markdown Quick Reference Headers (atx style) 1 2 3 4 5 6 # h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 Headers (setext style) 1 2 Header 1 ======== 1 2 Header 2 -------- Blockquotes 1 2 3 4 5 &amp;gt; This is &amp;gt; a blockquote &amp;gt; &amp;gt; &amp;gt; Nested &amp;gt; &amp;gt; Blockquote Unordered List 1 2 3 4 * Item 1 * Item 2 * item 3a * item 3b or</description></item></channel></rss>