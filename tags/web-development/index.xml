<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web development on Yongcheng website</title><link>https://jiyongcheng.dev/tags/web-development/</link><description>Recent content in web development on Yongcheng website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 07 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jiyongcheng.dev/tags/web-development/index.xml" rel="self" type="application/rss+xml"/><item><title>How to create a custom user provider in Laravel 9</title><link>https://jiyongcheng.dev/publications/how-to-create-a-custom-user-provider-in-laravel-9/</link><pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate><guid>https://jiyongcheng.dev/publications/how-to-create-a-custom-user-provider-in-laravel-9/</guid><description>Laravel provides several built-in user providers for authentication, including Eloquent and Database providers. However, sometimes you may want to use a custom data source or storage for user authentication. In such cases, you can create a custom user provider in Laravel.</description></item><item><title>Forcing Visits to use SSL</title><link>https://jiyongcheng.dev/blog/force-ssl/</link><pubDate>Thu, 01 Jan 2009 14:09:10 +0000</pubDate><guid>https://jiyongcheng.dev/blog/force-ssl/</guid><description>Intro Doesn&amp;rsquo;t matter whether it&amp;rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.
First it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty &amp;lsquo;man in the middle&amp;quot; attack.</description></item></channel></rss>