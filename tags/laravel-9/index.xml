<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Laravel 9 on What, Why, How</title><link>https://jiyongcheng.dev/tags/laravel-9/</link><description>Recent content in Laravel 9 on What, Why, How</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 20 Apr 2023 15:23:47 +1000</lastBuildDate><atom:link href="https://jiyongcheng.dev/tags/laravel-9/index.xml" rel="self" type="application/rss+xml"/><item><title>How to create a custom user provider in Laravel 9</title><link>https://jiyongcheng.dev/post/2023/how-to-create-a-custom-user-provider-in-laravel-9/</link><pubDate>Thu, 20 Apr 2023 15:23:47 +1000</pubDate><guid>https://jiyongcheng.dev/post/2023/how-to-create-a-custom-user-provider-in-laravel-9/</guid><description>Laravel provides several built-in user providers for authentication, including Eloquent and Database providers. However, sometimes you may want to use a custom data source or storage for user authentication. In such cases, you can create a custom user provider in Laravel.
For my case, our client has already had hash algorithm and function to work, I&amp;rsquo;m thinking how to use Laravel 9 to do same thing.
So in this tutorial, we will walk you through the steps of creating a custom user provider in Laravel.</description></item></channel></rss>