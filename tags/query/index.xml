<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>query on What, Why, How</title><link>https://jiyongcheng.dev/tags/query/</link><description>Recent content in query on What, Why, How</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 15 Jul 2021 20:51:44 +0000</lastBuildDate><atom:link href="https://jiyongcheng.dev/tags/query/index.xml" rel="self" type="application/rss+xml"/><item><title>GraphQL</title><link>https://jiyongcheng.dev/post/graphql/</link><pubDate>Thu, 15 Jul 2021 20:51:44 +0000</pubDate><guid>https://jiyongcheng.dev/post/graphql/</guid><description>Getting started Overview An alternative approach to RESTful APIs GraphQL is a query language for APIs Easily describe the shape of the GraphQL API using clear shared terms. Clients issue queries/mutations to read and update data GraphQL syntax can express complex entity relations Libraries to implement GraphQL in different languages GraphQL {.link-arrow}
Schema schema GraphQL schema definition query Read and traverse data mutation Modify data or trigger an action subscription Run a query when an event occurs Built-in Scalar Types Int Signed 32‐bit integer Float Signed double-precision floating-point value String UTF‐8 character sequence Boolean true or false ID A Unique identifier Type Definitions scalar Scalar Type type Object Type interface Interface Type union Union Type enum Enum Type input Input Object Type Type Modifiers String Nullable String String!</description></item></channel></rss>