<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>search on What, Why, How</title><link>https://jiyongcheng.dev/tags/search/</link><description>Recent content in search on What, Why, How</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 28 Dec 2020 16:52:20 +0000</lastBuildDate><atom:link href="https://jiyongcheng.dev/tags/search/index.xml" rel="self" type="application/rss+xml"/><item><title>Find</title><link>https://jiyongcheng.dev/post/find/</link><pubDate>Mon, 28 Dec 2020 16:52:20 +0000</pubDate><guid>https://jiyongcheng.dev/post/find/</guid><description>Getting started Usage 1 $ find [path...] [options] [expression] Wildcard
1 2 3 $ find . -name &amp;#34;*.txt&amp;#34; $ find . -name &amp;#34;2020*.csv&amp;#34; $ find . -name &amp;#34;json_*&amp;#34; Regex reference (quickref.me) Find cheatsheet (gist.github.com) Option Examples Option Example Description -type find . -type d Find only directories -name find . -type f -name &amp;ldquo;*.</description></item><item><title>Grep</title><link>https://jiyongcheng.dev/post/grep/</link><pubDate>Wed, 25 Nov 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/grep/</guid><description>Getting started Usage Search standard output (i.e. a stream of text)
1 $ grep [options] search_string Search for an exact string in file:
1 $ grep [options] search_string path/to/file Print lines in myfile.txt containing the string &amp;ldquo;mellon&amp;rdquo;
1 $ grep &amp;#39;mellon&amp;#39; myfile.txt Wildcards are accepted in filename.
Option examples Option Example Operation -i grep -i ^DA demo.</description></item></channel></rss>