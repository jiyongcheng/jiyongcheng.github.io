<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>text on What, Why, How</title><link>https://jiyongcheng.dev/tags/text/</link><description>Recent content in text on What, Why, How</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 31 Dec 2020 15:18:34 +0000</lastBuildDate><atom:link href="https://jiyongcheng.dev/tags/text/index.xml" rel="self" type="application/rss+xml"/><item><title>Awk</title><link>https://jiyongcheng.dev/post/awk/</link><pubDate>Thu, 31 Dec 2020 15:18:34 +0000</pubDate><guid>https://jiyongcheng.dev/post/awk/</guid><description>Getting started Have a try 1 $ awk -F: &amp;#39;{print $1, $NF}&amp;#39; /etc/passwd - - - -F: Colon as a separator {...} Awk program print Prints the current record $1 First field $NF Last field /etc/passwd Input data file {.left-text} Awk program 1 2 3 4 5 BEGIN {&amp;lt;initializations&amp;gt;} &amp;lt;pattern 1&amp;gt; {&amp;lt;program actions&amp;gt;} &amp;lt;pattern 2&amp;gt; {&amp;lt;program actions&amp;gt;} .</description></item><item><title>Sed</title><link>https://jiyongcheng.dev/post/sed/</link><pubDate>Sun, 27 Dec 2020 18:34:08 +0000</pubDate><guid>https://jiyongcheng.dev/post/sed/</guid><description>Getting started Sed Usage Syntax
1 $ sed [options] command [input-file] With pipeline
1 $ cat report.txt | sed &amp;#39;s/Nick/John/g&amp;#39; 1 $ echo &amp;#39;123abc&amp;#39; | sed &amp;#39;s/[0-9]+//g&amp;#39; Option Examples Option Example Description -i sed -ibak &amp;rsquo;s/On/Off/' php.ini Backup and modify input file directly -E sed -E &amp;rsquo;s/[0-9]+//g' input-file Use extended regular expressions -n sed -n &amp;lsquo;3 p&amp;rsquo; config.</description></item><item><title>Markdown</title><link>https://jiyongcheng.dev/post/markdown/</link><pubDate>Mon, 14 Dec 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/markdown/</guid><description>Markdown Quick Reference Headers (atx style) 1 2 3 4 5 6 # h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 Headers (setext style) 1 2 Header 1 ======== 1 2 Header 2 -------- Blockquotes 1 2 3 4 5 &amp;gt; This is &amp;gt; a blockquote &amp;gt; &amp;gt; &amp;gt; Nested &amp;gt; &amp;gt; Blockquote Unordered List 1 2 3 4 * Item 1 * Item 2 * item 3a * item 3b or</description></item><item><title>Grep</title><link>https://jiyongcheng.dev/post/grep/</link><pubDate>Wed, 25 Nov 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/grep/</guid><description>Getting started Usage Search standard output (i.e. a stream of text)
1 $ grep [options] search_string Search for an exact string in file:
1 $ grep [options] search_string path/to/file Print lines in myfile.txt containing the string &amp;ldquo;mellon&amp;rdquo;
1 $ grep &amp;#39;mellon&amp;#39; myfile.txt Wildcards are accepted in filename.
Option examples Option Example Operation -i grep -i ^DA demo.</description></item><item><title>Vim</title><link>https://jiyongcheng.dev/post/vim/</link><pubDate>Wed, 25 Nov 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/vim/</guid><description>Getting started Motion Diagrams 1 ▼/▶ Cursor ▽/▷ Target Left-right motions 1 2 3 4 5 6 7 8 9 10 ┌───────────── | ├───────────── 0 $ ──────────────┐ │ ┌────────── ^ fe ────────┐ │ │ │ ┌─────── Fo te ───────┐│ │ │ │ │┌────── To 30| ───┐ ││ │ │ │ ││ ┌──── ge w ───┐ │ ││ │ │ │ ││ │ ┌── b e ─┐ │ │ ││ │ │ │ ││ │ │ ┌h l┐ │ │ │ ││ │ ▽ ▽ ▽▽ ▽ ▽ ▽▼ ▼▽ ▽ ▽ ▽ ▽▽ ▽ echo &amp;#34;A cheatsheet from quickref.</description></item></channel></rss>