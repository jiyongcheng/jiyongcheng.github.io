<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux Command on What, Why, How</title><link>https://jiyongcheng.dev/categories/linux-command/</link><description>Recent content in Linux Command on What, Why, How</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 01 Jul 2021 10:51:44 +0000</lastBuildDate><atom:link href="https://jiyongcheng.dev/categories/linux-command/index.xml" rel="self" type="application/rss+xml"/><item><title>Chmod</title><link>https://jiyongcheng.dev/post/chmod/</link><pubDate>Thu, 01 Jul 2021 10:51:44 +0000</pubDate><guid>https://jiyongcheng.dev/post/chmod/</guid><description>Getting started Syntax 1 $ chmod [options] &amp;lt;permissions&amp;gt; &amp;lt;file&amp;gt; Example 1 2 3 4 $ chmod 755 foo.txt $ chmod +x quickref.py $ chmod u-x quickref.py $ chmod u=rwx,g=rx,o= quickref.sh Change files and directories recursively 1 $ chmod -R 755 my_directory The chmod command stands for &amp;ldquo;change mode&amp;rdquo;
Chmod Generator Chmod Generator allows you to quickly and visually generate permissions in numerical and symbolic.</description></item><item><title>Tmux</title><link>https://jiyongcheng.dev/post/tmux/</link><pubDate>Sat, 20 Feb 2021 14:31:24 +0000</pubDate><guid>https://jiyongcheng.dev/post/tmux/</guid><description>Tmux CLI New session Start a new session
1 $ tmux Start a new named session
1 $ tmux new -s myname Show all sessions
1 $ tmux ls Attach session Attach to last session
1 $ tmux a Attach to named
1 $ tmux a -t myname Kill session Kill a session by name</description></item><item><title>Lsof</title><link>https://jiyongcheng.dev/post/lsof/</link><pubDate>Fri, 05 Feb 2021 16:12:47 +0000</pubDate><guid>https://jiyongcheng.dev/post/lsof/</guid><description>Getting started Introduction lsof meaning LiSt Open Files is used to find out which files are open by which process
1 2 $ lsof $ sudo lsof -u root Port-specific 1 2 3 4 5 6 $ lsof -i :8080 $ lsof -i :80 -i :22 $ lsof -i TCP:22 $ lsof -i TCP:1-1024 $ lsof -i UDP $ lsof -i @192.168.1.5 Process-specific 1 2 3 4 5 $ lsof -c mysql $ lsof -c java $ lsof -c ssh $ lsof -c nginx $ lsof -c ssh -c httpd User-specific 1 2 3 $ lsof -u www-data $ lsof -u www-data -u ubuntu $ lsof -i -u ^root # Except certain user Network-specific 1 2 $ lsof -i 4 # IPv4 only $ lsof -i 6 # IPv6 only PID-specific 1 2 $ lsof -p 1753 $ lsof -p ^3 # Except certain pids Filename-specific 1 2 $ lsof /var/log/messages $ lsof /etc/passwd Directory-specific 1 $ lsof +D /var/log # Within a directory Kill 1 2 $ kill -9 `lsof -t -u apache` $ kill -9 $(lsof -t -i :8080)</description></item><item><title>SSH</title><link>https://jiyongcheng.dev/post/ssh/</link><pubDate>Wed, 27 Jan 2021 11:48:05 +0000</pubDate><guid>https://jiyongcheng.dev/post/ssh/</guid><description>Getting started Connecting Connect to a server (default port 22)
1 $ ssh root@192.168.1.5 Connect on a specific port
1 $ ssh root@192.168.1.5 -p 6222 Connect via pem file (0400 permissions)
1 $ ssh -i /path/file.pem root@192.168.1.5 See: SSH Permissions
Executing Executes remote command
1 $ ssh root@192.168.1.5 &amp;#39;ls -l&amp;#39; Invoke a local script
1 $ ssh root@192.</description></item><item><title>Netstat</title><link>https://jiyongcheng.dev/post/netstat/</link><pubDate>Wed, 27 Jan 2021 11:44:21 +0000</pubDate><guid>https://jiyongcheng.dev/post/netstat/</guid><description>Getting started Statistics All connections on port 80
1 $ netstat -anp | grep :80 Netstat Help
1 $ netstat -h Listening Option Example netstat -ltunp All Listening ports netstat -ltn Listening TCP ports netstat -lun Listening UDP ports netstat -lx Listening Unix ports Connections Option Example netstat -a All connections netstat -at All TCP connections netstat -au All UDP connections Statistics Option Example netstat -s Display statistics netstat -st Display TCP statistics netstat -su Display UDP statistics Networks Option Example netstat -i Show network interfaces netstat -ie Show network interfaces extended info Routing Option Example netstat -r Show routing table netstat -rn Show routing table, don&amp;rsquo;t resolve hosts</description></item><item><title>Screen</title><link>https://jiyongcheng.dev/post/screen/</link><pubDate>Sat, 02 Jan 2021 20:03:55 +0000</pubDate><guid>https://jiyongcheng.dev/post/screen/</guid><description>Getting started Getting started 1 $ screen 1. Press Ctrl-A D to detach session
2. List all screen sessions
1 $ screen -ls 3. Re-attach a screen Session
1 $ screen -r &amp;lt;name/pid&amp;gt; Options Options Example Description -S screen -S debug Start a new session with session name -ls screen -ls List running sessions / screens -x screen -x Attach to a running session -r screen -r debug Attach to a running session with name -R screen -R debug Attach to a session (Will create if it doesn&amp;rsquo;t exist) -d screen -d -m wget xxxx.</description></item><item><title>Awk</title><link>https://jiyongcheng.dev/post/awk/</link><pubDate>Thu, 31 Dec 2020 15:18:34 +0000</pubDate><guid>https://jiyongcheng.dev/post/awk/</guid><description>Getting started Have a try 1 $ awk -F: &amp;#39;{print $1, $NF}&amp;#39; /etc/passwd - - - -F: Colon as a separator {...} Awk program print Prints the current record $1 First field $NF Last field /etc/passwd Input data file {.left-text} Awk program 1 2 3 4 5 BEGIN {&amp;lt;initializations&amp;gt;} &amp;lt;pattern 1&amp;gt; {&amp;lt;program actions&amp;gt;} &amp;lt;pattern 2&amp;gt; {&amp;lt;program actions&amp;gt;} .</description></item><item><title>Find</title><link>https://jiyongcheng.dev/post/find/</link><pubDate>Mon, 28 Dec 2020 16:52:20 +0000</pubDate><guid>https://jiyongcheng.dev/post/find/</guid><description>Getting started Usage 1 $ find [path...] [options] [expression] Wildcard
1 2 3 $ find . -name &amp;#34;*.txt&amp;#34; $ find . -name &amp;#34;2020*.csv&amp;#34; $ find . -name &amp;#34;json_*&amp;#34; Regex reference (quickref.me) Find cheatsheet (gist.github.com) Option Examples Option Example Description -type find . -type d Find only directories -name find . -type f -name &amp;ldquo;*.</description></item><item><title>Sed</title><link>https://jiyongcheng.dev/post/sed/</link><pubDate>Sun, 27 Dec 2020 18:34:08 +0000</pubDate><guid>https://jiyongcheng.dev/post/sed/</guid><description>Getting started Sed Usage Syntax
1 $ sed [options] command [input-file] With pipeline
1 $ cat report.txt | sed &amp;#39;s/Nick/John/g&amp;#39; 1 $ echo &amp;#39;123abc&amp;#39; | sed &amp;#39;s/[0-9]+//g&amp;#39; Option Examples Option Example Description -i sed -ibak &amp;rsquo;s/On/Off/' php.ini Backup and modify input file directly -E sed -E &amp;rsquo;s/[0-9]+//g' input-file Use extended regular expressions -n sed -n &amp;lsquo;3 p&amp;rsquo; config.</description></item><item><title>Cron</title><link>https://jiyongcheng.dev/post/cron/</link><pubDate>Wed, 16 Dec 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/cron/</guid><description>Crontab Format Format 1 Min Hour Day Mon Weekday 1 * * * * * command to be executed 1 2 3 4 5 6 ┬ ┬ ┬ ┬ ┬ │ │ │ │ └─ Day of Week (0=Sun .. 6=Sat) │ │ │ └────── Month (1..12) │ │ └─────────── Day of Month (1..31) │ └──────────────── Hour (0..23) └───────────────────── Minute (0..59) Field Range Special characters Minute 0 - 59 , - * / Hour 0 - 23 , - * / Day of Month 1 - 31 , - * ?</description></item><item><title>Git</title><link>https://jiyongcheng.dev/post/git/</link><pubDate>Wed, 25 Nov 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/git/</guid><description>Getting started Create a Repository Create a new local repository
1 $ git init [project name] Clone a repository
1 $ git clone git_url Clone a repository into a specified directory
1 $ git clone git_url my_directory Make a change Show modified files in working directory, staged for your next commit
1 $ git status Stages the file, ready for commit</description></item><item><title>Grep</title><link>https://jiyongcheng.dev/post/grep/</link><pubDate>Wed, 25 Nov 2020 18:28:43 +0000</pubDate><guid>https://jiyongcheng.dev/post/grep/</guid><description>Getting started Usage Search standard output (i.e. a stream of text)
1 $ grep [options] search_string Search for an exact string in file:
1 $ grep [options] search_string path/to/file Print lines in myfile.txt containing the string &amp;ldquo;mellon&amp;rdquo;
1 $ grep &amp;#39;mellon&amp;#39; myfile.txt Wildcards are accepted in filename.
Option examples Option Example Operation -i grep -i ^DA demo.</description></item></channel></rss>