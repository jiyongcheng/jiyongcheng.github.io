<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>What, Why, How</title><link>https://jiyongcheng.dev/</link><description>Recent content on What, Why, How</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 29 Sep 2021 12:45:41 +1000</lastBuildDate><atom:link href="https://jiyongcheng.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Check Port Being Used</title><link>https://jiyongcheng.dev/post/devops/linux/check-port-being-used/</link><pubDate>Wed, 29 Sep 2021 12:45:41 +1000</pubDate><guid>https://jiyongcheng.dev/post/devops/linux/check-port-being-used/</guid><description>&lt;p>&lt;code>lsof&lt;/code> list open files&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">lsof -i -P -n &lt;span class="p">|&lt;/span> grep LISTEN
- -i selects the listing of all Internet and x.25 &lt;span class="o">(&lt;/span>HP-UX&lt;span class="o">)&lt;/span> network files
- -P inhibit the conversion of port numbers to port names
- -n inhibit the conversion of network numbers to host names
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>-P and -n will make the lookup faster&lt;/code>&lt;/p>
&lt;h2 id="example">Example&lt;/h2>
&lt;h3 id="list-only-files-that-listen-to-port-80">List only files that listen to port 80&lt;/h3>
&lt;p>&lt;code>lsof -i:80 -P -n | grep LISTEN&lt;/code>&lt;/p></description></item><item><title>Understanding Git</title><link>https://jiyongcheng.dev/post/devops/tool/git/understanding-git/</link><pubDate>Tue, 28 Sep 2021 15:35:23 +1000</pubDate><guid>https://jiyongcheng.dev/post/devops/tool/git/understanding-git/</guid><description>&lt;h2 id="what-does-10064-mean-in-git">What does 10064 mean in Git?&lt;/h2>
&lt;p>When you do &lt;code>git commit&lt;/code> command, you probably have seen this information&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback"> delete mode 100644 layouts/resource/index.html
create mode 100644 layouts/resource/section.html
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>but what does this series of number mean?&lt;/p>
&lt;p>The values shown are the 16-bit file modes as stored by Git, you can &lt;a href="https://github.com/git/git/blob/master/Documentation/technical/index-format.txt">check here&lt;/a> to know more:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback"> 32-bit mode, split into (high to low bits)
4-bit object type
valid values in binary are 1000 (regular file), 1010 (symbolic link) and 1110 (gitlink)
3-bit unused
9-bit unix permission. Only 0755 and 0644 are valid for regular files.
Symbolic links and gitlinks have value 0 in this field.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If the file doesn’t mention directories; they are represented using object type 0100.&lt;/p>
&lt;p>Each digit in the six-digit value is in octal, representing three bits; 16 bits thus need six digits, the first of which only represents one bit:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">Type|---|Perm bits
1000 000 111101101
1 0 0 7 5 5
1000 000 110100100
1 0 0 6 4 4
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Git doesn’t store arbitrary modes, only a subset of the values are allowed, from the usual POSIX types and modes (in octal, 12 for a symbolic link, 10 for a regular file, 04 for a directory) to which git adds 16 for Git links. The mode is appended, using four octal digits.&lt;/p>
&lt;p>For files,&lt;/p>
&lt;p>you’ll only ever see 100755 or 100644 (although 100664 is also technically possible);&lt;/p>
&lt;p>directories are 040000 (permissions are ignored),&lt;/p>
&lt;p>symbolic links 120000.&lt;/p>
&lt;p>The set-user-ID, set-group-ID and sticky bits aren’t supported at all (they would be stored in the unused bits).&lt;/p></description></item><item><title>Create Array With Object From List using jq</title><link>https://jiyongcheng.dev/post/devops/tool/jq/create-array-with-object-from-list/</link><pubDate>Wed, 22 Sep 2021 14:31:07 +1000</pubDate><guid>https://jiyongcheng.dev/post/devops/tool/jq/create-array-with-object-from-list/</guid><description>&lt;h2 id="problem">Problem&lt;/h2>
&lt;p>We have a list of &lt;code>IDs&lt;/code> generated into a file &lt;code>F&lt;/code> with this format:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">2f9921bc-a4c9-419a-b069-f8f23c7727f7
26bf5cc3-73de-425e-9a6b-b70223387314
30ac5b4c-f4c6-42c6-901d-e8bdf16464b8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We want to generate a &lt;code>JSON&lt;/code> object from the &lt;code>IDs&lt;/code> with this structure:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2f9921bc-a4c9-419a-b069-f8f23c7727f7&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;organisation_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">123&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;user-type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="the-way-we-do-it">The way we do it&lt;/h2>
&lt;h3 id="we-use-jq">we use &lt;code>jq&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>what is &lt;code>jq&lt;/code>
&lt;ul>
&lt;li>&lt;code>jq&lt;/code> is a lightweight and flexible command-line JSON processor. 轻量级的命令行JSON处理器，非常灵活&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>what are the main features
&lt;ul>
&lt;li>&lt;code>jq&lt;/code> is like &lt;code>sed&lt;/code> for &lt;code>JSON&lt;/code> data
&lt;ul>
&lt;li>你可以方便的使用它对结构化的数据进行&lt;code>slice&lt;/code> and &lt;code>filter&lt;/code> and &lt;code>map&lt;/code> and &lt;code>transform&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>jq&lt;/code> is written in portable C, and it has zero runtime dependencies.
&lt;ul>
&lt;li>它没有运行时的依赖&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://stedolan.github.io/jq/tutorial/">Tutorial&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stedolan.github.io/jq/manual/">Manual&lt;/a> or you can run &lt;code>man jq&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="how-do-we-do-it">How do we do it&lt;/h2>
&lt;p>the following is the code&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nv">USER_IDS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>jq -Rn &lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1"> def assemble_user($user_id): {
&lt;/span>&lt;span class="s1"> &amp;#34;user_id&amp;#34;: $user_id
&lt;/span>&lt;span class="s1"> };
&lt;/span>&lt;span class="s1"> [
&lt;/span>&lt;span class="s1"> inputs
&lt;/span>&lt;span class="s1"> | select(length&amp;gt;0)
&lt;/span>&lt;span class="s1"> | assemble_user(.)
&lt;/span>&lt;span class="s1"> ]&amp;#39;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$USER_IDS&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="nv">USER_JSON&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span> jq -n &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --argjson user_ids &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$USER_IDS&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --arg organisation_id &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$ORGANISATION_ID&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --arg user_type &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$USER_TYPE&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="s1">&amp;#39;{organisation_id: $organisation_id, user_type: $user_type, users: $user_ids}&amp;#39;&lt;/span> &lt;span class="k">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$USER_JSON&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="syntax-of-jq">Syntax of jq&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&amp;ndash;raw-input/-R:
&lt;strong>Don&amp;rsquo;t parse the input as JSON&lt;/strong>. Instead, each line of text is &lt;strong>passed to the filter as a &lt;code>string&lt;/code>&lt;/strong>. If combined with &amp;ndash;slurp, then the entire input is passed to the filter as a single long string.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;ndash;null-input/-n:
Don&amp;rsquo;t read any input at all! Instead, the filter is run once using null as the input. This is useful when using jq as a simple calculator or to construct JSON data from scratch.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>input&lt;/code> and &lt;code>inputs&lt;/code>, that read from the same sources (e.g., stdin, files named on the command-line) as jq itself.&lt;/p>
&lt;ul>
&lt;li>&lt;code>input&lt;/code> Outputs one new input.&lt;/li>
&lt;li>&lt;code>inputs&lt;/code> Outputs all remaining inputs, one by one.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="explaination-of-the-process">Explaination of the process&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>-R&lt;/code> means jq will treat the anything it gets as a string not a JSON. if you don&amp;rsquo;t use &lt;code>-R&lt;/code> and pass a string as input, it will throw error.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-n&lt;/code> means jq will not read any input. so it can work together with &lt;code>inputs&lt;/code> to construct a JSON data.&lt;/p>
&lt;ul>
&lt;li>if you do this &lt;code>echo '1\n2\n3' | jq -R '[inputs]'&lt;/code> you will only get &lt;code>[&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;]&lt;/code>. why? because without &lt;code>-n&lt;/code> jq will read a input, which is &lt;code>1&lt;/code>, then the &lt;code>inputs&lt;/code> will ouputs the &lt;strong>remaining&lt;/strong> inputs, which are &lt;code>2\n3&lt;/code>.&lt;/li>
&lt;li>if you do this &lt;code>echo '1\n2\n3' | jq -Rn '[inputs]'&lt;/code>, you will get &lt;code>[&amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;]&lt;/code>. why? because with &lt;code>-n&lt;/code> jq will &lt;strong>not&lt;/strong> read a input, so the &lt;code>inputs&lt;/code> will outputs the &lt;strong>remaining&lt;/strong> inputs, which are &lt;code>1\n2\n3&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>select(length&amp;gt;0)&lt;/code> for each input, it will filter out the empty input&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>assemble_user(.)&lt;/code> for each input, it will call the def &lt;code>assemble_user&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>def assemble_user($user_id): {&amp;quot;user_id&amp;quot;: $user_id}&lt;/code> for each input like &lt;code>123&lt;/code>, it will return a object like &lt;code>{&amp;quot;user_id&amp;quot;: 123}&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;lt;&amp;lt;&amp;lt;&lt;/code> this symbol means &lt;code>Here string&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;lt;&amp;lt;&amp;lt;&lt;/code> is known as here-string. Instead of typing in text, you give a pre-made string of text to a program. For example, with such program as bc we can do bc &amp;laquo;&amp;lt; 5&lt;em>4 to just get output for that specific case, no need to run bc interactively. Think of it as the equivalent of echo &amp;lsquo;5&lt;/em>4&amp;rsquo; | bc.&lt;/li>
&lt;/ul>
&lt;p>check the difference between &lt;code>&amp;lt;,&amp;lt;&amp;lt;,&amp;lt;&amp;lt;&amp;lt;&lt;/code> &lt;a href="https://askubuntu.com/questions/678915/whats-the-difference-between-and-in-bash">here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>--argjson&lt;/code> means it has a JSON data as the argument.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>--arg&lt;/code> means it has a string data as the argument&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>jq -n --argjson user_ids &amp;quot;$USER_IDS&amp;quot; --arg organisation_id &amp;quot;$ORGANISATION_ID&amp;quot; &lt;/code> you can structure a JSON data easily.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="the-result">The result&lt;/h2>
&lt;ul>
&lt;li>So first step I get the array with objects.
&lt;ul>
&lt;li>if you do this quickly&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;2f9921bc-a4c9-419a-b069-f8f23c7727f7\n26bf5cc3-73de-425e-9a6b-b70223387314\n30ac5b4c-f4c6-42c6-901d-e8bdf16464b8&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> jq -Rn &lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1"> def assemble_users($user_id): {&amp;#34;user_id&amp;#34;: $user_id};
&lt;/span>&lt;span class="s1"> [
&lt;/span>&lt;span class="s1"> inputs
&lt;/span>&lt;span class="s1"> | select(length&amp;gt;0)
&lt;/span>&lt;span class="s1"> | assemble_users(.)
&lt;/span>&lt;span class="s1"> ]&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>you will get:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2f9921bc-a4c9-419a-b069-f8f23c7727f7&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;26bf5cc3-73de-425e-9a6b-b70223387314&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;30ac5b4c-f4c6-42c6-901d-e8bdf16464b8&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Second, I assemble them together as a object. you will get&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2f9921bc-a4c9-419a-b069-f8f23c7727f7&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;26bf5cc3-73de-425e-9a6b-b70223387314&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;user_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;30ac5b4c-f4c6-42c6-901d-e8bdf16464b8&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;organisation_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">123&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;user-type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>DevOps</title><link>https://jiyongcheng.dev/resource/devops/</link><pubDate>Wed, 22 Sep 2021 09:29:55 +1000</pubDate><guid>https://jiyongcheng.dev/resource/devops/</guid><description>&lt;h1 id="makefile">makefile&lt;/h1>
&lt;ul>
&lt;li>Makefile: &lt;a href="https://makefiletutorial.com/#getting-started">https://makefiletutorial.com/#getting-started&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="git">git&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.git-scm.com/book/en/v2">https://www.git-scm.com/book/en/v2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.atlassian.com/git/tutorials/what-is-version-control">https://www.atlassian.com/git/tutorials/what-is-version-control&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>English</title><link>https://jiyongcheng.dev/resource/english/</link><pubDate>Wed, 22 Sep 2021 09:29:55 +1000</pubDate><guid>https://jiyongcheng.dev/resource/english/</guid><description>&lt;p>发音的本质是通过感官（耳朵+眼睛），协助嘴（口腔肌肉），养成正确的发音习惯。 眼（观察口型）+ 耳朵（辩音）+ 嘴（刻意练习）= 漂亮的音&lt;/p>
&lt;ul>
&lt;li>Master spoken english: &lt;a href="https://www.youtube.com/watch?v=ilrPvgs29v0&amp;amp;list=PL9YsEhi5oFAbjsAqP-3b-fAIip98pAsx9&amp;amp;index=3">https://www.youtube.com/watch?v=ilrPvgs29v0&amp;amp;list=PL9YsEhi5oFAbjsAqP-3b-fAIip98pAsx9&amp;amp;index=3&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Interesting</title><link>https://jiyongcheng.dev/resource/interesting/</link><pubDate>Wed, 22 Sep 2021 09:29:55 +1000</pubDate><guid>https://jiyongcheng.dev/resource/interesting/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://joelcalifa.com/work/">https://joelcalifa.com/work/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Programming language</title><link>https://jiyongcheng.dev/resource/programming-language/</link><pubDate>Wed, 22 Sep 2021 09:29:55 +1000</pubDate><guid>https://jiyongcheng.dev/resource/programming-language/</guid><description>&lt;h1 id="java">Java&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://programmingbydoing.com/">https://programmingbydoing.com/&lt;/a>&lt;/li>
&lt;li>java-a-beginners-guide-eighth-edition: &lt;a href="https://pdfroom.com/books/java-a-beginners-guide-eighth-edition/PXn2GJrKgxV">https://pdfroom.com/books/java-a-beginners-guide-eighth-edition/PXn2GJrKgxV&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="python">Python&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://realpython.com/">https://realpython.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://au1lib.org/book/5973705/f707f1?id=5973705&amp;amp;secret=f707f1">https://au1lib.org/book/5973705/f707f1?id=5973705&amp;amp;secret=f707f1&lt;/a> books for download&lt;/li>
&lt;li>free books :https://github.com/pamoroso/free-python-books&lt;/li>
&lt;/ul>
&lt;h1 id="php">PHP&lt;/h1>
&lt;h1 id="javascript">Javascript&lt;/h1>
&lt;ul>
&lt;li>Javascript &lt;a href="https://masteringjs.io/fundamentals">https://masteringjs.io/fundamentals&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Shortcut</title><link>https://jiyongcheng.dev/resource/shortcuts/</link><pubDate>Wed, 22 Sep 2021 09:29:55 +1000</pubDate><guid>https://jiyongcheng.dev/resource/shortcuts/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://www.shortcutfoo.com/">https://www.shortcutfoo.com/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Architecture</title><link>https://jiyongcheng.dev/resource/architecture/</link><pubDate>Wed, 22 Sep 2021 09:29:55 +1000</pubDate><guid>https://jiyongcheng.dev/resource/architecture/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://drive.google.com/file/d/1wfF7ZIPtY-TSzF8ZNmSOD5A2-5WVL9vo/view?usp=sharing">Software architecture patterns&lt;/a>&lt;/li>
&lt;li>search #softwarearchitecture on youtube&lt;/li>
&lt;li>c4 Model &lt;a href="https://c4model.com/">https://c4model.com/&lt;/a>&lt;/li>
&lt;li>DDD &lt;a href="https://github.com/heynickc/awesome-ddd">https://github.com/heynickc/awesome-ddd&lt;/a>&lt;/li>
&lt;li>example about hexagonal architecture.
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=ujb_O6myknY">https://www.youtube.com/watch?v=ujb_O6myknY&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/tedyoung/kid-bank">https://github.com/tedyoung/kid-bank&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.twitch.tv/videos/663668992">https://www.twitch.tv/videos/663668992&lt;/a>&lt;/li>
&lt;li>related to hexagonal architecture: &lt;a href="https://www.jianshu.com/p/c2a361c2406c">https://www.jianshu.com/p/c2a361c2406c&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>architecture decision record: &lt;a href="https://adr.github.io/">https://adr.github.io/&lt;/a>&lt;/li>
&lt;li>archunit is a java tool to help enforcing architecture, for php there is one as well &lt;a href="https://github.com/j6s/phparch">https://github.com/j6s/phparch&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://icyfenix.cn/">凤凰架构-构筑可靠的大型分布式系统&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="system-design">System Design&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.stephanboyer.com/post/132/what-are-covariance-and-contravariance">https://www.stephanboyer.com/post/132/what-are-covariance-and-contravariance&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudsavvyit.com/9904/what-is-covariance-and-contravariance-in-programming/">https://www.cloudsavvyit.com/9904/what-is-covariance-and-contravariance-in-programming/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="aws">AWS&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://app.cloudcraft.co/blueprint/23df5228-15cf-4521-bf0b-5e9da066c29c">https://app.cloudcraft.co/blueprint/23df5228-15cf-4521-bf0b-5e9da066c29c&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://app.cloudcraft.co">Draw AWS diagram&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://expeditedsecurity.com/aws-in-plain-english/">https://expeditedsecurity.com/aws-in-plain-english/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Web development</title><link>https://jiyongcheng.dev/resource/web-development/</link><pubDate>Wed, 22 Sep 2021 09:29:55 +1000</pubDate><guid>https://jiyongcheng.dev/resource/web-development/</guid><description>&lt;h1 id="html">HTML&lt;/h1>
&lt;ul>
&lt;li>HTML head element explaination &lt;a href="https://github.com/joshbuchea/HEAD">https://github.com/joshbuchea/HEAD&lt;/a>&lt;/li>
&lt;li>Every element I use for the basic structure of a HTML document &lt;a href="https://www.matuzo.at/blog/html-boilerplate/">https://www.matuzo.at/blog/html-boilerplate/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="css">CSS&lt;/h1>
&lt;ul>
&lt;li>Google learn css course: &lt;a href="https://web.dev/learn/css/">https://web.dev/learn/css/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="icon">Icon&lt;/h1>
&lt;ul>
&lt;li>icon free download: &lt;a href="https://iconic.app/">https://iconic.app/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Diagram</title><link>https://jiyongcheng.dev/post/system-design/diagram/</link><pubDate>Thu, 16 Sep 2021 15:16:45 +1000</pubDate><guid>https://jiyongcheng.dev/post/system-design/diagram/</guid><description>&lt;p>&lt;img src="test.drawio.svg" alt="Example">&lt;/p></description></item><item><title>Not All Objects Serializable</title><link>https://jiyongcheng.dev/post/programming-language/php/not-all-objects-serializable/</link><pubDate>Fri, 27 Aug 2021 16:21:52 +1000</pubDate><guid>https://jiyongcheng.dev/post/programming-language/php/not-all-objects-serializable/</guid><description>&lt;h2 id="the-question-i-have">The question I have&lt;/h2>
&lt;p>I was reading this article &amp;ldquo;PHP Serialization, Stack Traces, and Exceptions&amp;rdquo;[^1] and had these questions:&lt;/p>
&lt;ul>
&lt;li>Why PDO isn&amp;rsquo;t serializable?&lt;/li>
&lt;li>Why isn&amp;rsquo;t every type of object serializable?&lt;/li>
&lt;/ul>
&lt;h2 id="the-answer">The answer&lt;/h2>
&lt;p>After some search, I found some useful information as follows. &lt;a href="https://stackoverflow.com/a/25435734">check this for details&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>A PDO object contains state that cannot be represented in the serialization format. For example, the PDO object contains an open connection to a database server.&lt;/p>
&lt;/blockquote>
&lt;p>And I copied the answer from &lt;a href="https://stackoverflow.com/a/1309686">here&lt;/a>:&lt;/p>
&lt;p>Some objects encapsulate resources like file pointers or network sockets that can&amp;rsquo;t be deserialized to the state they were in when you serialized the object that contained them.&lt;/p>
&lt;pre>&lt;code>Example: you shouldn't deserialize an object that serves as an authenticated database connection, because to do so, you'd need the serialized form to contain a plaintext password. This would not be a good practice, because someone might get a hold of the saved serialized form. You also have no idea when you deserialize that the database server is still running, can be accessed, the authentication credentials still valid, etc.
&lt;/code>&lt;/pre>
&lt;h2 id="why-the-test-written-by-the-author-can-work">Why the test written by the author can work&lt;/h2>
&lt;p>Test code is here:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="k">class&lt;/span> &lt;span class="nc">NotSerializable&lt;/span> &lt;span class="k">implements&lt;/span> &lt;span class="nx">Serializable&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">public&lt;/span> &lt;span class="k">function&lt;/span> &lt;span class="nf">serialize&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">LogicException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;You cannot serialize or unserialize NotSerializable instances&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">public&lt;/span> &lt;span class="k">function&lt;/span> &lt;span class="nf">unserialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$serialized&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">LogicException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;You cannot serialize or unserialize NotSerializable instances&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If you write a test code like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="nv">$a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">NotSerializable&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">echo&lt;/span> &lt;span class="nx">serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It will throw the error:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="nx">PHP&lt;/span> &lt;span class="nx">Fatal&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Uncaught&lt;/span> &lt;span class="nx">LogicException&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">You&lt;/span> &lt;span class="nx">cannot&lt;/span> &lt;span class="nx">serialize&lt;/span> &lt;span class="k">or&lt;/span> &lt;span class="nx">unserialize&lt;/span> &lt;span class="nx">NotSerializable&lt;/span> &lt;span class="nx">instances&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nx">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">jdoodle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nx">php&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">7&lt;/span>
&lt;span class="nx">Stack&lt;/span> &lt;span class="nx">trace&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">#0 [internal function]: NotSerializable-&amp;gt;serialize()
&lt;/span>&lt;span class="c1">#1 /home/jdoodle.php(23): serialize(Object(NotSerializable))
&lt;/span>&lt;span class="c1">#2 {main}
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">thrown&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nx">home&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">jdoodle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nx">php&lt;/span> &lt;span class="nx">on&lt;/span> &lt;span class="nx">line&lt;/span> &lt;span class="mi">7&lt;/span>
&lt;span class="nx">Command&lt;/span> &lt;span class="nx">exited&lt;/span> &lt;span class="nx">with&lt;/span> &lt;span class="nx">non&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">zero&lt;/span> &lt;span class="nx">status&lt;/span> &lt;span class="mi">255&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="my-understanding">My understanding&lt;/h2>
&lt;p>Because the &lt;code>serialize()&lt;/code> function should return string or null to represent the object&amp;rsquo;s state, but it throws an Exception which isn&amp;rsquo;t it&amp;rsquo;s state. Thus in this scenario the object of class &lt;code>NotSerializable&lt;/code> is not serializable even though it implements the &lt;code>Serializable&lt;/code> interface.&lt;/p>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>[^1] &lt;a href="http://fabien.potencier.org/php-serialization-stack-traces-and-exceptions.html">PHP Serialization, Stack Traces, and Exceptions&lt;/a>&lt;/p></description></item><item><title>PHP Magic Method Invoke</title><link>https://jiyongcheng.dev/post/programming-language/php/php-magic-method-invoke/</link><pubDate>Fri, 27 Aug 2021 15:33:52 +1000</pubDate><guid>https://jiyongcheng.dev/post/programming-language/php/php-magic-method-invoke/</guid><description>&lt;h2 id="what-did-i-see">What did I see?&lt;/h2>
&lt;p>I saw in a PHP class using this method &lt;code>__invoke&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="k">public&lt;/span> &lt;span class="k">function&lt;/span> &lt;span class="fm">__invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">int&lt;/span> &lt;span class="nv">$errorNumber&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="nv">$errorString&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="nv">$errorFile&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">int&lt;/span> &lt;span class="nv">$errorLine&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">bool&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="why-using-this-method">Why using this method?&lt;/h2>
&lt;p>This magic method is called when user tries to invoke object as a function. Possible use cases may include some approaches like functional programming or some callbacks.&lt;/p>
&lt;h2 id="how-do-people-use-it">How do people use it?&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="k">class&lt;/span> &lt;span class="nc">Invokable&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="sd">/**
&lt;/span>&lt;span class="sd"> * This method will be called if object will be executed like a function:
&lt;/span>&lt;span class="sd"> *
&lt;/span>&lt;span class="sd"> * $invokable();
&lt;/span>&lt;span class="sd"> *
&lt;/span>&lt;span class="sd"> * Args will be passed as in regular method call.
&lt;/span>&lt;span class="sd"> */&lt;/span>
&lt;span class="k">public&lt;/span> &lt;span class="k">function&lt;/span> &lt;span class="fm">__invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$arg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">$arg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">print_r&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">func_get_args&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Example:
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nv">$invokable&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Invokable&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nv">$invokable&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="c1">// optputs:
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">Array&lt;/span>
&lt;span class="p">(&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Render Code Block in Bootstrap 5</title><link>https://jiyongcheng.dev/post/web-development/css/render-code-block-in-bootstrap-5/</link><pubDate>Thu, 26 Aug 2021 10:39:47 +1000</pubDate><guid>https://jiyongcheng.dev/post/web-development/css/render-code-block-in-bootstrap-5/</guid><description>&lt;h2 id="issue-found">Issue found:&lt;/h2>
&lt;p>I found the post which has code block cannot render correctly in the small devices which width is less than 576px.&lt;/p>
&lt;p>&lt;img src="issue-rendering-my-code-block-in-bootstrap-5.png" alt="issue-rendering-my-code-block-in-bootstrap-5">&lt;/p>
&lt;h2 id="why">Why?&lt;/h2>
&lt;p>I want to understand why this happend. So I just picked up a snippet which contains the code block and put into the bootstrap 5 example. Then the render result is like this:&lt;/p>
&lt;p>&lt;img src="render-code-block-in-bootstrap-5.gif" alt="render code block in bootstrap 5">&lt;/p>
&lt;p>My code block looks like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;highlight&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">pre&lt;/span> &lt;span class="na">tabindex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">code&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;language-bash&amp;#34;&lt;/span> &lt;span class="na">data-lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;bash&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>export ANDROID_HOME&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;color:#f92672&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>=&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>/Users/aron/Library/Android/sdk&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
export PATH&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;color:#f92672&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>=&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>$ANDROID_HOME/platform-tools:$PATH
export PATH&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;color:#f92672&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>=&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>$ANDROID_HOME/tools:$PATH
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">code&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">pre&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This doesn&amp;rsquo;t have issue, So I guess my html dom may have issue, so I copied my html dom just one more level up&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;d-grid&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;highlight&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">pre&lt;/span> &lt;span class="na">tabindex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
...
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">pre&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>then the issue happens:&lt;/p>
&lt;p>&lt;img src="issue-with-code-block.png" alt="issue with code block">&lt;/p>
&lt;p>So I know the issue happen when I use &lt;code>class=&amp;quot;d-grid&amp;quot;&lt;/code>, and checked again the class &lt;code>d-grid&lt;/code> using this style:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">d-grid&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">grid&lt;/span> &lt;span class="cp">!important&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>and class &lt;code>pre&lt;/code> using this style&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">pre&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin-bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">.875&lt;/span>&lt;span class="kt">em&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If I tick off class &lt;code>d-grid&lt;/code> display style, it will render correctly.&lt;/p>
&lt;h2 id="how-to-solve-it">How to solve it&lt;/h2>
&lt;p>remove the class &lt;code>d-grid&lt;/code>&lt;/p></description></item><item><title>Android app with react native</title><link>https://jiyongcheng.dev/post/mobile-app-development/android-app-with-react-native/</link><pubDate>Fri, 17 Jan 2020 10:18:00 +0000</pubDate><guid>https://jiyongcheng.dev/post/mobile-app-development/android-app-with-react-native/</guid><description>&lt;h2 id="issue-i-met">Issue I met&lt;/h2>
&lt;p>I want to follow &lt;a href="https://developer.okta.com/blog/2018/12/26/react-native-android-play-store">this article&lt;/a> to learn creating apps with react native. But I met several issues:&lt;/p>
&lt;blockquote>
&lt;p>error Failed to launch emulator. Reason: No emulators found as an output of &lt;code>emulator -list-avds&lt;/code>.
warn Please launch an emulator manually or connect a device. Otherwise app may fail to launch.
info Installing the app&amp;hellip;
Task :app:installDebug FAILED&lt;/p>
&lt;/blockquote>
&lt;p>Then I realized the another issue prompted:
&lt;code>/bin/sh: adb: command not found&lt;/code>&lt;/p>
&lt;h2 id="how-to-solve">How to solve&lt;/h2>
&lt;p>After googling, I got answer:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ANDROID_HOME&lt;/span>&lt;span class="o">=&lt;/span>/Users/aron/Library/Android/sdk
&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$ANDROID_HOME&lt;/span>/platform-tools:&lt;span class="nv">$PATH&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$ANDROID_HOME&lt;/span>/tools:&lt;span class="nv">$PATH&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>and I ran it again, it works. But I think you should also have created an AVD as well.&lt;/p></description></item></channel></rss>